/*
--------------------
.#{$pr}#{$p}header
--------------------
*/

.#{$pr}#{$l}document {

    // header height
    @include media-breakpoint-up(md) {
        padding-top: 2.75rem + map-get( $grid-gutter-widths, 'lg' );
    }

}

.#{$pr}#{$p}header {
    width: 100%;

    @include media-breakpoint-up(md) {
        position: absolute;
        top: 0;
        left: 0;
    }

    &:not(.js-scrollswitch-active) {
    }

    &.js-scrollswitch-active {
        box-shadow: 0 2px 5px rgba( 0, 0, 0, 0.3 );
    }

}

.#{$pr}#{$p}header#{$c1}title {

    img {
        transition: height .6s;
    }

}

.#{$pr}#{$p}header#{$c1}nav {

    .#{$pr}#{$m}nav#{$c1}children {
        height: 0;
        transform:
            translate( -50%, 0 )
            scale( 1, 0 );
        z-index: 61;

        &:before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: #fff;
            box-shadow: 0 3px 3px rgba( 0, 0, 0, 0.3 );
            transform-origin: top center;
            z-index: 62;
        }

        .#{$pr}#{$m}nav#{$c1}item {
            z-index: 63;
        }

    }

    .#{$pr}#{$m}nav#{$c1}item {

        &.js-hoverswitch-ready {
            // Do not use animation "reverse" for :not(:hover)
            // (Because it play when the document loads).
        }

        &.js-hoverswitch-in {

            .#{$pr}#{$m}nav#{$c1}children {
                transform:
                    translate( -50%, 0 )
                    scale( 1, 1 );
                height: auto;

                &:before {
                    animation: headerNavChildrenListIn .3s linear 1 forwards;
                }

                .#{$pr}#{$m}nav#{$c1}item {
                    animation: headerNavChildrenItemIn .6s linear 1 forwards;
                }

            }

        }

        &.js-hoverswitch-out {

            .#{$pr}#{$m}nav#{$c1}children {
                transform:
                    translate( -50%, 0 )
                    scale( 1, 1 );
                height: auto;
                animation: headerNavChildrenListWrapOut 0s .4s linear 1 forwards;

                &:before {
                    animation: headerNavChildrenListOut .2s .2s linear 1 forwards;
                }

                .#{$pr}#{$m}nav#{$c1}item {
                    animation: headerNavChildrenItemOut .2s linear 1 forwards;
                }

            }

        }

        &.is-parent {

            &:after {
                position: absolute;
                content: "";
                width: 100%;
                height: 3px;
                bottom: 0;
                left: 0;
                background-color: $ui-current-bg;
                z-index: 62;
            }

        }

    }

}

.#{$pr}#{$p}header#{$c1}button {

    .#{$pr}#{$m}nav#{$c1}label {

        &:hover,
        &:focus,
        &:active {

            svg {
                fill: currentcolor;
            }

        }

    }

    .#{$pr}#{$m}nav#{$c1}item {

        &.#{$pr}#{$p}header#{$c1}button#{$c3}lg {

            .#{$pr}#{$p}header#{$c1}button#{$c1}text {
                font-weight: bold;
            }

        }

    }

}



@keyframes headerNavChildrenListIn {
    0% {
        transform: scale( 1, 0 );
    }
    100% {
        transform: scale( 1, 1 );
    }
}

@keyframes headerNavChildrenItemIn {
    0% {
        opacity: 0;
        transform: translate( 0, -100% );
    }
    50% {
        opacity: .5;
        transform: translate( 0, 0 );
    }
    100% {
        opacity: 1;
        transform: translate( 0, 0 );
    }
}

@keyframes headerNavChildrenListWrapOut {
    0% {
        transform:
            translate( -50%, 0 )
            scale( 1, 1 );
        height: auto;
    }
    100% {
        transform:
            translate( -50%, 0 )
            scale( 1, 0 );
        height: 0;
    }
}

@keyframes headerNavChildrenListOut {
    0% {
        transform: scale( 1, 1 );
    }
    100% {
        transform: scale( 1, 0 );
    }
}

@keyframes headerNavChildrenItemOut {
    0% {
        opacity: 1;
        transform: translate( 0, 0 );
    }
    100% {
        opacity: 0;
        transform: translate( 0, -10% );
    }
}
